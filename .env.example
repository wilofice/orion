# AI Calendar Events Manager Backend - Environment Variables

# Application Settings
PROJECT_NAME=AI Calendar Events Manager Backend
API_V1_STR=/api/v1

# AWS Configuration
AWS_REGION=eu-north-1
# For local development, DynamoDB endpoint will be set automatically by docker-compose
# AWS_DYNAMODB_ENDPOINT_URL=http://localhost:8000

# DynamoDB Table Names
DYNAMODB_USER_TOKENS_TABLE_NAME=UserGoogleTokens
DYNAMODB_CHAT_SESSIONS_TABLE_NAME=ChatSessions
DYNAMODB_USER_PREFERENCES_TABLE_NAME=UserPreferences
DYNAMODB_USER_TASKS_TABLE_NAME=UserTasks
DYNAMODB_USER_EMAIL_MAPPING_TABLE_NAME=UserEmailMapping
DYNAMODB_TOOL_EXECUTION_RESULTS_TABLE_NAME=ToolExecutionResults

# Security Settings
# Generate a secure JWT secret key for production
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Encryption key for storing sensitive data (32 bytes = 64 hex characters)
# Generate with: openssl rand -hex 32
ENCRYPTION_KEY_HEX=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef

# Google OAuth Configuration
# Get these from Google Cloud Console
GOOGLE_CLIENT_ID_IOS=your-ios-client-id.googleusercontent.com
GOOGLE_CLIENT_ID_ANDROID=your-android-client-id.googleusercontent.com
GOOGLE_TOKEN_URL=https://oauth2.googleapis.com/token

# AI Service Configuration
# Get from Google AI Studio
GEMINI_API_KEY=your-gemini-api-key-here

# Production AWS Credentials (not needed for local development)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key